|;#
|;|N#math
|;|I#{
	fact : (nbr)
		acts
			>set> multiple +1
			>set> resulta +1
			>get> _fact()
	:
	_fact : 
		if nbr !== multiple
			then
				>add> resulta =#resulta#*#multiple#
				>add> multiple +1 
				>get> _fact()
			else
				>get> resulta
	:
	ackermann : (nbr1, nbr2)
		if nbr1 == +0
			then >get> =#nbr2#+1
			else >get> _if_nbr2_0()
	:
	_if_nbr2_0 :
		if nbr2 == +0
			then
				>get> ackermann((=#nbr1#-1, +1))
			else
				>set> resulta ackermann((nbr1, =#nbr2#-1 ))
				>get> ackermann((=#nbr1#-1, resulta))
	:
	syracuse : (nbr)
		if nbr > +0
			then
				>set> list_nbr []
				<get< _verif_pair_impair()
	:
	_verif_sup_1 :
		if nbr > +1
			then
				<get< _verif_pair_impair()
			else
				<get< list_nbr
	:
	_verif_pair_impair :
		if =#nbr#%2 !== +0
			then
				>set> nbr =#nbr#*3+1
				>add> list_nbr nbr
				<get< _verif_sup_1()
			else
				>set> nbr =#nbr#/2
				>add> list_nbr nbr
				<get< _verif_sup_1()
	:
}